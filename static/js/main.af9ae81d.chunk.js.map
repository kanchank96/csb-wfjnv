{"version":3,"sources":["AutoComplete.js","App.js","index.js"],"names":["AutoComplete","useState","apiData","setApiData","filterResult","setFilterResult","showCardFlag","setShowCardFlag","input","setinput","focusInput","useRef","useEffect","current","focus","fetchData","url","fetch","then","res","text","data","split","catch","err","console","log","regExpFunc","values","firstPart","substring","length","secPart","style","width","height","marginLeft","marginTop","htmlFor","type","onChange","e","inputValue","target","value","inputValueLen","toLowerCase","filterRes","filter","it","startsWith","handleChange","placeholder","ref","boxShadow","map","i","Card","Body","App","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oLAiFeA,EA/EM,WACnB,MAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,qBAAxC,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAwCJ,qBAAxC,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA0BN,qBAA1B,mBAAOO,EAAP,KAAcC,EAAd,KACMC,EAAaC,mBACnBC,qBAAU,WACRF,EAAWG,QAAQC,QAGdZ,GAASa,EADZ,kJAGJ,IAAMA,EAAY,SAACC,GACjBC,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLlB,EAAWkB,GAAQA,EAAKC,MAAM,UAE/BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAmB1BG,EAAa,SAACC,EAAQpB,GAC1B,GAAIoB,GAAUpB,EAAO,CACnB,IAAMqB,EAAYD,EAAOE,UAAU,EAAGtB,EAAMuB,QACtCC,EAAUJ,EAAOE,UAAUtB,EAAMuB,OAAQH,EAAOG,QACtD,OACE,iCACE,4BAAIF,IACHG,KAGA,OAAO,0BAEhB,OACE,sBACEC,MAAO,CACLC,MAAO,QACPC,OAAQ,QACRC,WAAY,QACZC,UAAW,SALf,UAQE,uBAAOC,QAAQ,OAAf,2BACA,uBACA,uBACEC,KAAK,OACLC,SAAU,SAACC,GAAD,OA1CK,SAACA,GACpB,IAAMC,EAAaD,EAAEE,OAAOC,MACtBC,EAAgBH,GAAcA,EAAWpB,MAAM,IAAIS,OAIzD,GAHIc,GACFpC,EAASiC,EAAWI,eAElBD,EAAgB,GAAK3C,GAAWA,EAAQ6B,OAAS,EAAG,CACtD,IAAMgB,EAAY7C,EAAQ8C,QAAO,SAACC,GAAD,OAC/BA,EAAGC,WAAWR,EAAWI,kBAEvBC,IACF1C,EAAgB0C,GAAwB,IACxCxC,GAAgB,SAEbA,GAAgB,GA4BF4C,CAAaV,IAC9BW,YAAY,oBACZC,IAAK3C,IAEP,qBAAKuB,MAAO,CAAEqB,UAAW,eAAzB,SACGhD,GACCF,GACAA,EAAamD,KAAI,SAACC,GAAD,OACf,cAACC,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UAAY/B,EAAW6B,EAAGhD,gBCvEzB,SAASmD,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,MCAN,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACN,EAAD,MAEFE,K","file":"static/js/main.af9ae81d.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nconst AutoComplete = () => {\r\n  const [apiData, setApiData] = useState();\r\n  const [filterResult, setFilterResult] = useState();\r\n  const [showCardFlag, setShowCardFlag] = useState();\r\n  const [input, setinput] = useState();\r\n  const focusInput = useRef();\r\n  useEffect(() => {\r\n    focusInput.current.focus();\r\n    const url =\r\n      \"https://gist.githubusercontent.com/abhijit-paul-blippar/0f97bb6626cfa9d8989c7199f7c66c5b/raw/dcff66021fba04ee8d3c6b23a3247fb5d56ae3e5/words\";\r\n    if (!apiData) fetchData(url);\r\n  });\r\n  const fetchData = (url) => {\r\n    fetch(url)\r\n      .then((res) => res.text())\r\n      .then((data) => {\r\n        setApiData(data && data.split(\"\\n\"));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const handleChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    const inputValueLen = inputValue && inputValue.split(\"\").length;\r\n    if (inputValueLen) {\r\n      setinput(inputValue.toLowerCase());\r\n    }\r\n    if (inputValueLen > 2 && apiData && apiData.length > 0) {\r\n      const filterRes = apiData.filter((it) =>\r\n        it.startsWith(inputValue.toLowerCase())\r\n      );\r\n      if (filterRes) {\r\n        setFilterResult(filterRes ? filterRes : []);\r\n        setShowCardFlag(true);\r\n      }\r\n    } else setShowCardFlag(false);\r\n  };\r\n\r\n  const regExpFunc = (values, input) => {\r\n    if (values && input) {\r\n      const firstPart = values.substring(0, input.length);\r\n      const secPart = values.substring(input.length, values.length);\r\n      return (\r\n        <span>\r\n          <b>{firstPart}</b>\r\n          {secPart}\r\n        </span>\r\n      );\r\n    } else return <span></span>;\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"30rem\",\r\n        height: \"15rem\",\r\n        marginLeft: \"40rem\",\r\n        marginTop: \"10rem\"\r\n      }}\r\n    >\r\n      <label htmlFor=\"text\">Kanchan Kumar</label>\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => handleChange(e)}\r\n        placeholder=\"Please enter text\"\r\n        ref={focusInput}\r\n      ></input>\r\n      <div style={{ boxShadow: \"0px 0px 1px\" }}>\r\n        {showCardFlag &&\r\n          filterResult &&\r\n          filterResult.map((i) => (\r\n            <Card>\r\n              <Card.Body>{regExpFunc(i, input)}</Card.Body>\r\n            </Card>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoComplete;\r\n","import \"./styles.css\";\nimport AutoComplete from \"./AutoComplete\";\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <AutoComplete />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}